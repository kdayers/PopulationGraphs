if (distancematrix[i,j] < cutoff) {
adjacent[i,j] <- 1
}
else {
adjacent[i,j] <- 0
}
}
}
}
rm(list=ls())
library(seqinr)
library(tidyverse)
library(igraph)
library(EnvStats)
filenames = dir(pattern="*.csv")
edge_densities<-c()
indivs<-50
cutoff <- 0.135
for(i in 1:length(filenames) ){
distancematrix<-read.csv(filenames[i],header=TRUE)
adjacent<-matrix(,nrow=indivs,ncol=indivs)
for (i in 1:indivs){
for (j in 1:indivs){
if (i==j){
adjacent[i,j]<-0
}
else {
if (distancematrix[i,j] < cutoff) {
adjacent[i,j] <- 1
}
else {
adjacent[i,j] <- 0
}
}
}
}
edge_density<-sum(adjacent)/(2*(choose(indivs,2)))
edge_densities[i]<-i
}
edge_densities
rm(list=ls())
library(seqinr)
library(tidyverse)
library(igraph)
library(EnvStats)
filenames = dir(pattern="*.csv")
edge_densities<-c()
indivs<-50
cutoff <- 0.135
for(i in 1:length(filenames) ){
distancematrix<-read.csv(filenames[i],header=TRUE)
adjacent<-matrix(,nrow=indivs,ncol=indivs)
for (i in 1:indivs){
for (j in 1:indivs){
if (i==j){
adjacent[i,j]<-0
}
else {
if (distancematrix[i,j] < cutoff) {
adjacent[i,j] <- 1
}
else {
adjacent[i,j] <- 0
}
}
}
}
edge_density<-sum(adjacent)/(2*(choose(indivs,2)))
edge_densities[i]<-edge_density
}
edge_densities
rm(list=ls())
library(seqinr)
library(tidyverse)
library(igraph)
library(EnvStats)
filenames = dir(pattern="*.csv")
edge_densities<-c()
indivs<-50
cutoff <- 0.135
for(k in 1:length(filenames) ){
distancematrix<-read.csv(filenames[i],header=TRUE)
adjacent<-matrix(,nrow=indivs,ncol=indivs)
for (i in 1:indivs){
for (j in 1:indivs){
if (i==j){
adjacent[i,j]<-0
}
else {
if (distancematrix[i,j] < cutoff) {
adjacent[i,j] <- 1
}
else {
adjacent[i,j] <- 0
}
}
}
}
edge_density<-sum(adjacent)/(2*(choose(indivs,2)))
edge_densities[k]<-edge_density
}
rm(list=ls())
library(seqinr)
library(tidyverse)
library(igraph)
library(EnvStats)
filenames = dir(pattern="*.csv")
edge_densities<-c()
indivs<-50
cutoff <- 0.135
for(k in 1:length(filenames) ){
distancematrix<-read.csv(filenames[k],header=TRUE)
adjacent<-matrix(,nrow=indivs,ncol=indivs)
for (i in 1:indivs){
for (j in 1:indivs){
if (i==j){
adjacent[i,j]<-0
}
else {
if (distancematrix[i,j] < cutoff) {
adjacent[i,j] <- 1
}
else {
adjacent[i,j] <- 0
}
}
}
}
edge_density<-sum(adjacent)/(2*(choose(indivs,2)))
edge_densities[k]<-edge_density
}
df <- data.frame(matrix(unlist(edge_densities), nrow=length(edge_densities), byrow=TRUE))
View(df)
mean(edge_densities)
rm(list=ls())
library(seqinr)
library(tidyverse)
library(igraph)
library(EnvStats)
distancedata<-read.csv("distancedata.csv",header=FALSE)
setwd("~/Google Drive/My Drive/Research/NIH R15")
rm(list=ls())
library(seqinr)
library(tidyverse)
library(igraph)
library(EnvStats)
distancedata<-read.csv("distancedata.csv",header=FALSE)
ggplot(distancedata,aes(x=V1)) +
geom_histogram(binwidth=0.001, colour="black", fill="cadetblue1")
mean(distancedata$V1)
var(distancedata$V1)
sd(distancedata$V1)
rm(list=ls())
library(seqinr)
library(tidyverse)
library(igraph)
library(EnvStats)
maxedgeweights<-read.csv("maxedgeweights.csv",header=FALSE)
ggplot(maxedgeweights,aes(x=V1)) +
geom_histogram(binwidth=0.001, colour="black", fill="cadetblue1")
maxmin<-read.csv("maxmin.csv",header=FALSE)
ggplot(maxmin,aes(x=V1)) +
geom_histogram(binwidth=0.001, colour="black", fill="pink")
differences=maxedgeweights-maxmin
merge(maxedgeweights,maxmin)
total<-merge(maxedgeweights,maxmin)
View(total)
total<-merge(maxedgeweights,maxmin,by="ID")
View(differences)
ERGraphs<-read.csv("ClosedClusterCoeff_CharPathLength_DegVariance.csv",header=FALSE)
View(ERGraphs)
mean(ERGraphs$V1)
sd(ERGraphs$V1)
mean(ERGraphs$V2)
sd(ERGraphs$V2)
mean(ERGraphs$V3)
sd(ERGraphs$V3)
ggplot(ERGraphs,aes(x=V3)) +
geom_histogram(binwidth=0.001, colour="black", fill="pink")
ggplot(ERGraphs,aes(x=V3)) +
geom_histogram(binwidth=0.01, colour="black", fill="pink")
ggplot(ERGraphs,aes(x=V3)) +
geom_histogram(binwidth=0.1, colour="black", fill="pink")
ggplot(ERGraphs,aes(x=V3)) +
geom_histogram(binwidth=0.1, colour="pink", fill="pink")
ggplot(ERGraphs,aes(x=V3)) +
geom_histogram(binwidth=0.5, colour="black", fill="pink")
t.test(ERGraphs$V1, conf.level = 0.95)
t.test(ERGraphs$V3, conf.level = 0.95)
rm(list=ls())
library(seqinr)
library(tidyverse)
library(igraph)
library(EnvStats)
filenames = dir(pattern="*.csv")
edge_densities<-c()
indivs<-50
cutoff <- 0.135
#for(k in 1:length(filenames) ){
# distancematrix<-read.csv(filenames[k],header=TRUE)
# adjacent<-matrix(,nrow=indivs,ncol=indivs)
# for (i in 1:indivs){
#    for (j in 1:indivs){
#     if (i==j){
#       adjacent[i,j]<-0
#      }
#    else {
#       if (distancematrix[i,j] < cutoff) {
#         adjacent[i,j] <- 1
#       }
#       else {
#        adjacent[i,j] <- 0
#       }
#     }
#   }
# }
# edge_density<-sum(adjacent)/(2*(choose(indivs,2)))
#  edge_densities[k]<-edge_density
#}
df <- data.frame(matrix(unlist(edge_densities), nrow=length(edge_densities), byrow=TRUE))
rm(list=ls())
library(seqinr)
library(tidyverse)
library(igraph)
library(EnvStats)
filenames = dir(pattern="*.csv")
edge_densities<-c()
indivs<-50
cutoff <- 0.135
#for(k in 1:length(filenames) ){
# distancematrix<-read.csv(filenames[k],header=TRUE)
# adjacent<-matrix(,nrow=indivs,ncol=indivs)
# for (i in 1:indivs){
#    for (j in 1:indivs){
#     if (i==j){
#       adjacent[i,j]<-0
#      }
#    else {
#       if (distancematrix[i,j] < cutoff) {
#         adjacent[i,j] <- 1
#       }
#       else {
#        adjacent[i,j] <- 0
#       }
#     }
#   }
# }
# edge_density<-sum(adjacent)/(2*(choose(indivs,2)))
#  edge_densities[k]<-edge_density
#}
#df <- data.frame(matrix(unlist(edge_densities), nrow=length(edge_densities), byrow=TRUE))
deg_variances<-c()
for(k in 1:length(filenames) ){
distancematrix<-read.csv(filenames[k],header=TRUE)
adjacent<-matrix(,nrow=indivs,ncol=indivs)
for (i in 1:indivs){
for (j in 1:indivs){
if (i==j){
adjacent[i,j]<-0
}
else {
if (distancematrix[i,j] < cutoff) {
adjacent[i,j] <- 1
}
else {
adjacent[i,j] <- 0
}
}
}
}
deg_variance<-variance(rowsum(adjacent))
deg_variances[k]<-deg_variance
}
setwd("~/Documents/GitHub/PopulationGraphs")
rm(list=ls())
library(seqinr)
library(tidyverse)
library(igraph)
library(EnvStats)
filenames = dir(pattern="*.csv")
edge_densities<-c()
indivs<-50
cutoff <- 0.135
#for(k in 1:length(filenames) ){
# distancematrix<-read.csv(filenames[k],header=TRUE)
# adjacent<-matrix(,nrow=indivs,ncol=indivs)
# for (i in 1:indivs){
#    for (j in 1:indivs){
#     if (i==j){
#       adjacent[i,j]<-0
#      }
#    else {
#       if (distancematrix[i,j] < cutoff) {
#         adjacent[i,j] <- 1
#       }
#       else {
#        adjacent[i,j] <- 0
#       }
#     }
#   }
# }
# edge_density<-sum(adjacent)/(2*(choose(indivs,2)))
#  edge_densities[k]<-edge_density
#}
#df <- data.frame(matrix(unlist(edge_densities), nrow=length(edge_densities), byrow=TRUE))
deg_variances<-c()
for(k in 1:length(filenames) ){
distancematrix<-read.csv(filenames[k],header=TRUE)
adjacent<-matrix(,nrow=indivs,ncol=indivs)
for (i in 1:indivs){
for (j in 1:indivs){
if (i==j){
adjacent[i,j]<-0
}
else {
if (distancematrix[i,j] < cutoff) {
adjacent[i,j] <- 1
}
else {
adjacent[i,j] <- 0
}
}
}
}
deg_variance<-variance(rowsum(adjacent))
deg_variances[k]<-deg_variance
}
rm(list=ls())
library(seqinr)
library(tidyverse)
library(igraph)
library(EnvStats)
filenames = dir(pattern="*.csv")
edge_densities<-c()
indivs<-50
cutoff <- 0.135
#for(k in 1:length(filenames) ){
# distancematrix<-read.csv(filenames[k],header=TRUE)
# adjacent<-matrix(,nrow=indivs,ncol=indivs)
# for (i in 1:indivs){
#    for (j in 1:indivs){
#     if (i==j){
#       adjacent[i,j]<-0
#      }
#    else {
#       if (distancematrix[i,j] < cutoff) {
#         adjacent[i,j] <- 1
#       }
#       else {
#        adjacent[i,j] <- 0
#       }
#     }
#   }
# }
# edge_density<-sum(adjacent)/(2*(choose(indivs,2)))
#  edge_densities[k]<-edge_density
#}
#df <- data.frame(matrix(unlist(edge_densities), nrow=length(edge_densities), byrow=TRUE))
deg_variances<-c()
for(k in 1:length(filenames) ){
distancematrix<-read.csv(filenames[k],header=TRUE)
adjacent<-matrix(,nrow=indivs,ncol=indivs)
for (i in 1:indivs){
for (j in 1:indivs){
if (i==j){
adjacent[i,j]<-0
}
else {
if (distancematrix[i,j] < cutoff) {
adjacent[i,j] <- 1
}
else {
adjacent[i,j] <- 0
}
}
}
}
deg_variance<-var(rowsum(adjacent))
deg_variances[k]<-deg_variance
}
rm(list=ls())
library(seqinr)
library(tidyverse)
library(igraph)
library(EnvStats)
filenames = dir(pattern="*.csv")
edge_densities<-c()
indivs<-50
cutoff <- 0.135
#for(k in 1:length(filenames) ){
# distancematrix<-read.csv(filenames[k],header=TRUE)
# adjacent<-matrix(,nrow=indivs,ncol=indivs)
# for (i in 1:indivs){
#    for (j in 1:indivs){
#     if (i==j){
#       adjacent[i,j]<-0
#      }
#    else {
#       if (distancematrix[i,j] < cutoff) {
#         adjacent[i,j] <- 1
#       }
#       else {
#        adjacent[i,j] <- 0
#       }
#     }
#   }
# }
# edge_density<-sum(adjacent)/(2*(choose(indivs,2)))
#  edge_densities[k]<-edge_density
#}
#df <- data.frame(matrix(unlist(edge_densities), nrow=length(edge_densities), byrow=TRUE))
deg_variances<-c()
for(k in 1:length(filenames) ){
distancematrix<-read.csv(filenames[k],header=TRUE)
adjacent<-matrix(,nrow=indivs,ncol=indivs)
for (i in 1:indivs){
for (j in 1:indivs){
if (i==j){
adjacent[i,j]<-0
}
else {
if (distancematrix[i,j] < cutoff) {
adjacent[i,j] <- 1
}
else {
adjacent[i,j] <- 0
}
}
}
}
deg_variance<-var(rowSums(adjacent))
deg_variances[k]<-deg_variance
}
rm(list=ls())
library(seqinr)
library(tidyverse)
library(igraph)
library(EnvStats)
filenames = dir(pattern="*.csv")
edge_densities<-c()
indivs<-50
cutoff <- 0.135
#for(k in 1:length(filenames) ){
# distancematrix<-read.csv(filenames[k],header=TRUE)
# adjacent<-matrix(,nrow=indivs,ncol=indivs)
# for (i in 1:indivs){
#    for (j in 1:indivs){
#     if (i==j){
#       adjacent[i,j]<-0
#      }
#    else {
#       if (distancematrix[i,j] < cutoff) {
#         adjacent[i,j] <- 1
#       }
#       else {
#        adjacent[i,j] <- 0
#       }
#     }
#   }
# }
# edge_density<-sum(adjacent)/(2*(choose(indivs,2)))
#  edge_densities[k]<-edge_density
#}
#df <- data.frame(matrix(unlist(edge_densities), nrow=length(edge_densities), byrow=TRUE))
deg_variances<-c()
for(k in 1:length(filenames) ){
distancematrix<-read.csv(filenames[k],header=TRUE)
adjacent<-matrix(,nrow=indivs,ncol=indivs)
for (i in 1:indivs){
for (j in 1:indivs){
if (i==j){
adjacent[i,j]<-0
}
else {
if (distancematrix[i,j] < cutoff) {
adjacent[i,j] <- 1
}
else {
adjacent[i,j] <- 0
}
}
}
}
deg_variance<-var(rowSums(adjacent)/2)
deg_variances[k]<-deg_variance
}
mean(deg_variances)
t.test(deg_variances,conf.level=0.95)
rm(list=ls())
library(seqinr)
library(tidyverse)
library(igraph)
library(EnvStats)
ERGraphs<-read.csv("ClosedClusterCoeff_CharPathLength_DegVariance.csv",header=FALSE)
setwd("~/Documents/GitHub/PopulationGraphs/MATLAB Code")
rm(list=ls())
library(seqinr)
library(tidyverse)
library(igraph)
library(EnvStats)
ERGraphs<-read.csv("ClosedClusterCoeff_CharPathLength_DegVariance.csv",header=FALSE)
mean(ERGraphs$V1)
sd(ERGraphs$V1)
mean(ERGraphs$V2)
sd(ERGraphs$V2)
mean(ERGraphs$V3)
sd(ERGraphs$V3)
View(ERGraphs)
t.test(ERGraphs$V1,conf.level=0.95)
t.test(ERGraphs$V2,conf.level=0.95)
t.test(ERGraphs$V1,conf.level=0.99)
t.test(ERGraphs$V2,conf.level=0.99)
